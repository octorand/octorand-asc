#pragma version 10
txn NumAppArgs
int 0
==
bnz main_l28
txna ApplicationArgs 0
method "list(uint64,address,byte[240])void"
==
bnz main_l27
txna ApplicationArgs 0
method "unlist(address,byte[240])void"
==
bnz main_l26
txna ApplicationArgs 0
method "buy(address,byte[240])void"
==
bnz main_l25
txna ApplicationArgs 0
method "rename(uint64,uint64,uint64,byte[240])void"
==
bnz main_l24
txna ApplicationArgs 0
method "repaint(uint64,uint64,uint64,byte[240])void"
==
bnz main_l23
txna ApplicationArgs 0
method "upgrade(address,byte[240])void"
==
bnz main_l22
txna ApplicationArgs 0
method "mint(uint64,address,byte[240])void"
==
bnz main_l21
txna ApplicationArgs 0
method "withdraw(uint64,address,byte[240])void"
==
bnz main_l20
txna ApplicationArgs 0
method "optin(asset,byte[240])void"
==
bnz main_l19
txna ApplicationArgs 0
method "optout(asset,address,byte[240])void"
==
bnz main_l18
txna ApplicationArgs 0
method "claim(address,byte[240])void"
==
bnz main_l17
txna ApplicationArgs 0
method "score(uint64)void"
==
bnz main_l16
txna ApplicationArgs 0
method "refresh()void"
==
bnz main_l15
err
main_l15:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub refreshcaster_39
int 1
return
main_l16:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub scorecaster_38
int 1
return
main_l17:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub claimcaster_37
int 1
return
main_l18:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub optoutcaster_36
int 1
return
main_l19:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub optincaster_35
int 1
return
main_l20:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub withdrawcaster_34
int 1
return
main_l21:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub mintcaster_33
int 1
return
main_l22:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub upgradecaster_32
int 1
return
main_l23:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub repaintcaster_31
int 1
return
main_l24:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub renamecaster_30
int 1
return
main_l25:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub buycaster_29
int 1
return
main_l26:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub unlistcaster_28
int 1
return
main_l27:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub listcaster_27
int 1
return
main_l28:
txn OnCompletion
int NoOp
==
bnz main_l32
txn OnCompletion
int UpdateApplication
==
bnz main_l31
err
main_l31:
txn ApplicationID
int 0
!=
assert
callsub update_13
int 1
return
main_l32:
txn ApplicationID
int 0
==
assert
callsub create_12
int 1
return

// init_global
initglobal_0:
proto 1 0
frame_dig -1
int 120
bzero
app_global_put
retsub

// get_global_bytes
getglobalbytes_1:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_global_uint
getglobaluint_2:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getglobalbytes_1
btoi
retsub

// set_global_bytes
setglobalbytes_3:
proto 4 0
frame_dig -4
len
frame_dig -1
==
assert
frame_dig -3
frame_dig -3
app_global_get
int 0
frame_dig -2
extract3
frame_dig -4
concat
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
+
int 120
substring3
concat
app_global_put
retsub

// set_global_uint
setglobaluint_4:
proto 4 0
frame_dig -4
itob
int 8
frame_dig -1
-
frame_dig -1
extract3
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_3
retsub

// optin_into_asset
optinintoasset_5:
proto 1 0
itxn_begin
int axfer
itxn_field TypeEnum
frame_dig -1
itxn_field XferAsset
int 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
int 0
itxn_field Fee
itxn_submit
retsub

// optout_from_asset
optoutfromasset_6:
proto 2 0
itxn_begin
int axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
int 0
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetCloseTo
int 0
itxn_field Fee
itxn_submit
retsub

// execute_payment
executepayment_7:
proto 2 0
itxn_begin
int pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
int 0
itxn_field Fee
itxn_submit
retsub

// execute_asset_transfer
executeassettransfer_8:
proto 3 0
itxn_begin
int axfer
itxn_field TypeEnum
frame_dig -3
itxn_field XferAsset
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
int 0
itxn_field Fee
itxn_submit
retsub

// assert_application_creator
assertapplicationcreator_9:
proto 2 0
frame_dig -2
app_params_get AppCreator
store 1
store 0
load 1
assert
load 0
frame_dig -1
==
assert
retsub

// assert_caller
assertcaller_10:
proto 0 0
global CallerApplicationID
addr 7OADTMWJEC7NNXEOQITJYWDZI4DDDAULFL7U65SAPAODY2WAJQRDOEGBEM
callsub assertapplicationcreator_9
retsub

// refresh_balance
refreshbalance_11:
proto 0 0
global CurrentApplicationAddress
byte "P1"
int 8
int 8
callsub getglobaluint_2
asset_holding_get AssetBalance
store 2
byte "P2"
int 32
int 8
callsub setglobaluint_4
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
byte "P2"
int 40
int 8
callsub setglobaluint_4
retsub

// create
create_12:
proto 0 0
txn Sender
addr SQIMRT6PMR5OX6WNWLJYCFPXW67AXQNVIFKYEQLVKPQ5GTCAMTO7WK7NGQ
==
assert
byte "P1"
callsub initglobal_0
byte "P2"
callsub initglobal_0
retsub

// update
update_13:
proto 0 0
txn Sender
addr 7OADTMWJEC7NNXEOQITJYWDZI4DDDAULFL7U65SAPAODY2WAJQRDOEGBEM
==
assert
retsub

// list
list_14:
proto 3 0
byte "P1"
int 64
int 32
callsub getglobalbytes_1
global ZeroAddress
==
assert
byte "P1"
int 56
int 8
callsub getglobaluint_2
int 0
==
assert
callsub assertcaller_10
frame_dig -3
byte "P1"
int 56
int 8
callsub setglobaluint_4
frame_dig -2
byte "P1"
int 64
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// unlist
unlist_15:
proto 2 0
byte "P1"
int 56
int 8
callsub getglobaluint_2
int 0
>
assert
byte "P1"
int 64
int 32
callsub getglobalbytes_1
frame_dig -2
==
assert
callsub assertcaller_10
byte "P1"
int 16
int 8
callsub getglobaluint_2
frame_dig -2
int 1
callsub executeassettransfer_8
int 0
byte "P1"
int 56
int 8
callsub setglobaluint_4
global ZeroAddress
byte "P1"
int 64
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// buy
buy_16:
proto 2 0
byte "P1"
int 56
int 8
callsub getglobaluint_2
int 0
>
assert
byte "P1"
int 64
int 32
callsub getglobalbytes_1
global ZeroAddress
!=
assert
callsub assertcaller_10
byte "P1"
int 16
int 8
callsub getglobaluint_2
frame_dig -2
int 1
callsub executeassettransfer_8
int 0
byte "P1"
int 56
int 8
callsub setglobaluint_4
global ZeroAddress
byte "P1"
int 64
int 32
callsub setglobalbytes_3
byte "P1"
int 96
int 2
callsub getglobaluint_2
int 1
+
byte "P1"
int 96
int 2
callsub setglobaluint_4
frame_dig -1
log
retsub

// rename
rename_17:
proto 4 0
callsub assertcaller_10
byte "P1"
int 104
int 16
callsub getglobalbytes_1
frame_dig -4
frame_dig -3
setbyte
byte "P1"
int 104
int 16
callsub setglobalbytes_3
byte "P1"
int 100
int 2
callsub getglobaluint_2
frame_dig -2
+
byte "P1"
int 100
int 2
callsub setglobaluint_4
frame_dig -1
log
retsub

// repaint
repaint_18:
proto 4 0
callsub assertcaller_10
frame_dig -4
byte "P1"
int 40
int 2
callsub setglobaluint_4
frame_dig -3
byte "P1"
int 42
int 2
callsub setglobaluint_4
byte "P1"
int 100
int 2
callsub getglobaluint_2
frame_dig -2
+
byte "P1"
int 100
int 2
callsub setglobaluint_4
frame_dig -1
log
retsub

// upgrade
upgrade_19:
proto 2 0
byte "P1"
int 47
int 1
callsub getglobaluint_2
int 0
==
assert
callsub assertcaller_10
byte "P1"
int 16
int 8
callsub getglobaluint_2
frame_dig -2
int 1
callsub executeassettransfer_8
int 1
byte "P1"
int 47
int 1
callsub setglobaluint_4
frame_dig -1
log
retsub

// mint
mint_20:
proto 3 0
callsub assertcaller_10
byte "P1"
int 8
int 8
callsub getglobaluint_2
frame_dig -2
frame_dig -3
callsub executeassettransfer_8
byte "P1"
int 98
int 2
callsub getglobaluint_2
int 1
+
byte "P1"
int 98
int 2
callsub setglobaluint_4
callsub refreshbalance_11
frame_dig -1
log
retsub

// withdraw
withdraw_21:
proto 3 0
callsub assertcaller_10
frame_dig -2
frame_dig -3
callsub executepayment_7
callsub refreshbalance_11
frame_dig -1
log
retsub

// optin
optin_22:
proto 2 0
frame_dig -2
txnas Assets
byte "P1"
int 8
int 8
callsub getglobaluint_2
!=
assert
frame_dig -2
txnas Assets
byte "P1"
int 16
int 8
callsub getglobaluint_2
!=
assert
frame_dig -2
txnas Assets
byte "P1"
int 24
int 8
callsub getglobaluint_2
!=
assert
callsub assertcaller_10
frame_dig -2
txnas Assets
callsub optinintoasset_5
byte "P1"
int 102
int 2
callsub getglobaluint_2
int 1
+
byte "P1"
int 102
int 2
callsub setglobaluint_4
callsub refreshbalance_11
frame_dig -1
log
retsub

// optout
optout_23:
proto 3 0
frame_dig -3
txnas Assets
byte "P1"
int 8
int 8
callsub getglobaluint_2
!=
assert
frame_dig -3
txnas Assets
byte "P1"
int 16
int 8
callsub getglobaluint_2
!=
assert
frame_dig -3
txnas Assets
byte "P1"
int 24
int 8
callsub getglobaluint_2
!=
assert
callsub assertcaller_10
frame_dig -3
txnas Assets
frame_dig -2
callsub optoutfromasset_6
byte "P1"
int 102
int 2
callsub getglobaluint_2
int 1
-
byte "P1"
int 102
int 2
callsub setglobaluint_4
callsub refreshbalance_11
frame_dig -1
log
retsub

// claim
claim_24:
proto 2 0
callsub assertcaller_10
frame_dig -2
byte "P2"
int 0
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// score
score_25:
proto 1 0
callsub assertcaller_10
byte "P1"
int 48
int 8
callsub getglobaluint_2
frame_dig -1
+
byte "P1"
int 48
int 8
callsub setglobaluint_4
retsub

// refresh
refresh_26:
proto 0 0
callsub refreshbalance_11
retsub

// list_caster
listcaster_27:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub list_14
retsub

// unlist_caster
unlistcaster_28:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub unlist_15
retsub

// buy_caster
buycaster_29:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub buy_16
retsub

// rename_caster
renamecaster_30:
proto 0 0
int 0
dupn 2
byte ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
callsub rename_17
retsub

// repaint_caster
repaintcaster_31:
proto 0 0
int 0
dupn 2
byte ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
callsub repaint_18
retsub

// upgrade_caster
upgradecaster_32:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub upgrade_19
retsub

// mint_caster
mintcaster_33:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub mint_20
retsub

// withdraw_caster
withdrawcaster_34:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub withdraw_21
retsub

// optin_caster
optincaster_35:
proto 0 0
int 0
byte ""
txna ApplicationArgs 1
int 0
getbyte
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub optin_22
retsub

// optout_caster
optoutcaster_36:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
int 0
getbyte
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub optout_23
retsub

// claim_caster
claimcaster_37:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub claim_24
retsub

// score_caster
scorecaster_38:
proto 0 0
int 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub score_25
retsub

// refresh_caster
refreshcaster_39:
proto 0 0
callsub refresh_26
retsub
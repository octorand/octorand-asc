#pragma version 10
txn NumAppArgs
int 0
==
bnz main_l20
txna ApplicationArgs 0
method "initialize(uint64,asset,asset,byte[16],address)void"
==
bnz main_l19
txna ApplicationArgs 0
method "list(uint64,address,byte[240])void"
==
bnz main_l18
txna ApplicationArgs 0
method "unlist(address,byte[240])void"
==
bnz main_l17
txna ApplicationArgs 0
method "buy(address,byte[240])void"
==
bnz main_l16
txna ApplicationArgs 0
method "rename(byte[16],byte[240])void"
==
bnz main_l15
txna ApplicationArgs 0
method "mint(uint64,address,byte[240])void"
==
bnz main_l14
txna ApplicationArgs 0
method "claim(address,byte[240])void"
==
bnz main_l13
txna ApplicationArgs 0
method "fire(byte[240])void"
==
bnz main_l12
txna ApplicationArgs 0
method "refresh()void"
==
bnz main_l11
err
main_l11:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub refreshcaster_29
int 1
return
main_l12:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub firecaster_28
int 1
return
main_l13:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub claimcaster_27
int 1
return
main_l14:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub mintcaster_26
int 1
return
main_l15:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub renamecaster_25
int 1
return
main_l16:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub buycaster_24
int 1
return
main_l17:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub unlistcaster_23
int 1
return
main_l18:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub listcaster_22
int 1
return
main_l19:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub initializecaster_21
int 1
return
main_l20:
txn OnCompletion
int NoOp
==
bnz main_l24
txn OnCompletion
int UpdateApplication
==
bnz main_l23
err
main_l23:
txn ApplicationID
int 0
!=
assert
callsub update_11
int 1
return
main_l24:
txn ApplicationID
int 0
==
assert
callsub create_10
int 1
return

// init_global
initglobal_0:
proto 1 0
frame_dig -1
int 120
bzero
app_global_put
retsub

// get_global_bytes
getglobalbytes_1:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_global_uint
getglobaluint_2:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getglobalbytes_1
btoi
retsub

// set_global_bytes
setglobalbytes_3:
proto 4 0
frame_dig -4
len
frame_dig -1
==
assert
frame_dig -3
frame_dig -3
app_global_get
int 0
frame_dig -2
extract3
frame_dig -4
concat
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
+
int 120
substring3
concat
app_global_put
retsub

// set_global_uint
setglobaluint_4:
proto 4 0
frame_dig -4
itob
int 8
frame_dig -1
-
frame_dig -1
extract3
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_3
retsub

// optin_into_asset
optinintoasset_5:
proto 1 0
itxn_begin
int axfer
itxn_field TypeEnum
frame_dig -1
itxn_field XferAsset
int 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
int 0
itxn_field Fee
itxn_submit
retsub

// execute_asset_transfer
executeassettransfer_6:
proto 3 0
itxn_begin
int axfer
itxn_field TypeEnum
frame_dig -3
itxn_field XferAsset
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
int 0
itxn_field Fee
itxn_submit
retsub

// assert_application_creator
assertapplicationcreator_7:
proto 2 0
frame_dig -2
app_params_get AppCreator
store 2
store 1
load 2
assert
load 1
frame_dig -1
==
assert
retsub

// assert_caller
assertcaller_8:
proto 0 0
global CallerApplicationID
addr NXZLEEQ35KIZ3V3MHFXOOQNEINVLYAU7JCAOZZTQRCDREO4O34I27KLIXU
callsub assertapplicationcreator_7
retsub

// refresh_balance
refreshbalance_9:
proto 0 0
global CurrentApplicationAddress
byte "P"
int 8
int 8
callsub getglobaluint_2
asset_holding_get AssetBalance
store 0
byte "P"
int 24
int 8
callsub setglobaluint_4
retsub

// create
create_10:
proto 0 0
txn Sender
addr JLVSDIM7E6XOKJ45WDWJHIU7MDO5RU4LROS55M2OVJ5NB6KNRT2LNRFXEA
==
assert
byte "P"
callsub initglobal_0
retsub

// update
update_11:
proto 0 0
txn Sender
addr NXZLEEQ35KIZ3V3MHFXOOQNEINVLYAU7JCAOZZTQRCDREO4O34I27KLIXU
==
assert
retsub

// initialize
initialize_12:
proto 5 0
txn Sender
addr NXZLEEQ35KIZ3V3MHFXOOQNEINVLYAU7JCAOZZTQRCDREO4O34I27KLIXU
==
assert
frame_dig -5
byte "P"
int 0
int 8
callsub setglobaluint_4
frame_dig -4
txnas Assets
byte "P"
int 8
int 8
callsub setglobaluint_4
frame_dig -3
txnas Assets
byte "P"
int 16
int 8
callsub setglobaluint_4
frame_dig -2
byte "P"
int 104
int 16
callsub setglobalbytes_3
frame_dig -1
byte "P"
int 72
int 32
callsub setglobalbytes_3
int 0
byte "P"
int 32
int 8
callsub setglobaluint_4
global ZeroAddress
byte "P"
int 40
int 32
callsub setglobalbytes_3
frame_dig -4
txnas Assets
callsub optinintoasset_5
frame_dig -3
txnas Assets
callsub optinintoasset_5
retsub

// list
list_13:
proto 3 0
byte "P"
int 40
int 32
callsub getglobalbytes_1
global ZeroAddress
==
assert
byte "P"
int 32
int 8
callsub getglobaluint_2
int 0
==
assert
callsub assertcaller_8
frame_dig -3
byte "P"
int 32
int 8
callsub setglobaluint_4
frame_dig -2
byte "P"
int 40
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// unlist
unlist_14:
proto 2 0
byte "P"
int 32
int 8
callsub getglobaluint_2
int 0
>
assert
byte "P"
int 40
int 32
callsub getglobalbytes_1
frame_dig -2
==
assert
callsub assertcaller_8
byte "P"
int 16
int 8
callsub getglobaluint_2
frame_dig -2
int 1
callsub executeassettransfer_6
int 0
byte "P"
int 32
int 8
callsub setglobaluint_4
global ZeroAddress
byte "P"
int 40
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// buy
buy_15:
proto 2 0
byte "P"
int 32
int 8
callsub getglobaluint_2
int 0
>
assert
byte "P"
int 40
int 32
callsub getglobalbytes_1
global ZeroAddress
!=
assert
callsub assertcaller_8
byte "P"
int 16
int 8
callsub getglobaluint_2
frame_dig -2
int 1
callsub executeassettransfer_6
int 0
byte "P"
int 32
int 8
callsub setglobaluint_4
global ZeroAddress
byte "P"
int 40
int 32
callsub setglobalbytes_3
frame_dig -2
byte "P"
int 72
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// rename
rename_16:
proto 2 0
callsub assertcaller_8
frame_dig -2
byte "P"
int 104
int 16
callsub setglobalbytes_3
frame_dig -1
log
retsub

// mint
mint_17:
proto 3 0
callsub assertcaller_8
byte "P"
int 8
int 8
callsub getglobaluint_2
frame_dig -2
frame_dig -3
callsub executeassettransfer_6
callsub refreshbalance_9
frame_dig -1
log
retsub

// claim
claim_18:
proto 2 0
callsub assertcaller_8
frame_dig -2
byte "P"
int 72
int 32
callsub setglobalbytes_3
frame_dig -1
log
retsub

// fire
fire_19:
proto 1 0
callsub assertcaller_8
frame_dig -1
log
retsub

// refresh
refresh_20:
proto 0 0
callsub refreshbalance_9
retsub

// initialize_caster
initializecaster_21:
proto 0 0
int 0
dupn 2
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
int 0
getbyte
frame_bury 1
txna ApplicationArgs 3
int 0
getbyte
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
txna ApplicationArgs 5
frame_bury 4
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub initialize_12
retsub

// list_caster
listcaster_22:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub list_13
retsub

// unlist_caster
unlistcaster_23:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub unlist_14
retsub

// buy_caster
buycaster_24:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub buy_15
retsub

// rename_caster
renamecaster_25:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub rename_16
retsub

// mint_caster
mintcaster_26:
proto 0 0
int 0
byte ""
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub mint_17
retsub

// claim_caster
claimcaster_27:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub claim_18
retsub

// fire_caster
firecaster_28:
proto 0 0
byte ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub fire_19
retsub

// refresh_caster
refreshcaster_29:
proto 0 0
callsub refresh_20
retsub
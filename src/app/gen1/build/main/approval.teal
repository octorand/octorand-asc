#pragma version 8
intcblock 0 8 1 4
bytecblock 0x432d31
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x008962b5 // "init(asset)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x9d81b6cf // "create_prime(uint64,byte[],byte[],byte[])void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xbeb6d16d // "update_prime_application(application)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xd224a7cb // "update_prime_asset(asset,account)void"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateprimeassetcaster_25
intc_2 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateprimeapplicationcaster_24
intc_2 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createprimecaster_23
intc_2 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initcaster_22
intc_2 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
intc_3 // UpdateApplication
==
bnz main_l13
err
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_17
intc_2 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_16
intc_2 // 1
return

// init_global
initglobal_0:
proto 1 0
frame_dig -1
pushint 100 // 100
bzero
app_global_put
retsub

// get_global_bytes
getglobalbytes_1:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_global_uint
getglobaluint_2:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getglobalbytes_1
btoi
retsub

// set_global_bytes
setglobalbytes_3:
proto 4 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_13
frame_dig -3
frame_dig -3
intc_0 // 0
frame_dig -2
callsub getglobalbytes_1
frame_dig -4
concat
frame_dig -3
frame_dig -2
frame_dig -1
+
pushint 100 // 100
frame_dig -2
frame_dig -1
+
-
callsub getglobalbytes_1
concat
app_global_put
retsub

// set_global_uint
setglobaluint_4:
proto 4 0
frame_dig -4
frame_dig -1
callsub extractuint_5
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_3
retsub

// extract_uint
extractuint_5:
proto 2 1
frame_dig -2
itob
intc_1 // 8
frame_dig -1
-
frame_dig -1
extract3
retsub

// create_application
createapplication_6:
proto 8 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // NoOp
itxn_field OnCompletion
frame_dig -8
itxn_field ApprovalProgram
frame_dig -7
itxn_field ClearStateProgram
frame_dig -6
itxn_field GlobalNumUint
frame_dig -5
itxn_field GlobalNumByteSlice
frame_dig -4
itxn_field LocalNumUint
frame_dig -3
itxn_field LocalNumByteSlice
frame_dig -2
itxn_field ExtraProgramPages
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// update_application
updateapplication_7:
proto 4 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_3 // UpdateApplication
itxn_field OnCompletion
frame_dig -4
itxn_field ApplicationID
frame_dig -3
itxn_field ApprovalProgram
frame_dig -2
itxn_field ClearStateProgram
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// create_asset
createasset_8:
proto 8 0
frame_dig -8
global ZeroAddress
!=
assert
frame_dig -7
global ZeroAddress
!=
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -8
itxn_field ConfigAssetManager
frame_dig -7
itxn_field ConfigAssetReserve
frame_dig -6
itxn_field ConfigAssetTotal
frame_dig -5
itxn_field ConfigAssetDecimals
frame_dig -4
itxn_field ConfigAssetUnitName
frame_dig -3
itxn_field ConfigAssetName
frame_dig -2
itxn_field ConfigAssetURL
intc_0 // 0
itxn_field ConfigAssetDefaultFrozen
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// update_asset
updateasset_9:
proto 5 0
frame_dig -4
global ZeroAddress
!=
assert
frame_dig -3
global ZeroAddress
!=
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -5
itxn_field ConfigAsset
frame_dig -4
itxn_field ConfigAssetManager
frame_dig -3
itxn_field ConfigAssetReserve
frame_dig -2
itxn_field Note
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// optin_into_asset
optinintoasset_10:
proto 2 0
frame_dig -2
intc_0 // 0
>
bz optinintoasset_10_l2
itxn_begin
intc_3 // axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
itxn_field Fee
itxn_submit
optinintoasset_10_l2:
retsub

// assert_is_creator
assertiscreator_11:
proto 0 0
txn Sender
global CreatorAddress
==
assert
retsub

// assert_is_zero
assertiszero_12:
proto 1 0
frame_dig -1
intc_0 // 0
==
assert
retsub

// assert_is_valid_length
assertisvalidlength_13:
proto 2 0
frame_dig -2
len
frame_dig -1
==
assert
retsub

// prime_approval_program
primeapprovalprogram_14:
proto 0 1
intc_0 // 0
dup
pushbytes 0x08200400080164260103432d31311b221240001d361a008004695ca1601240000100311922123118221310448800db24433119221240001331198104124000010031182213448800a32443311822124488007924438a01008bff25af67898a03018bfd648bfe8bff58898a04008bfc8bff88004d8bfd8bfd228bfe88ffe08bfc508bfd8bfe8bff08258bfe8bff080988ffcc5067898a04008bfc8bff88000a8bfd8bfe8bff88ffc2898a02018bfe16238bff098bff58898a0000310032091244898a02008bfe158bff1244898a00002888ff828003432d3288ff7a8003432d3388ff728003432d3488ff6a898a000088ffc5898a020088ffbe8bfe28222388ff948bff28232388ff8c898a00002249361a01178c00361a02178c018b008b0188ffd189 // 0x08200400080164260103432d31311b221240001d361a008004695ca1601240000100311922123118221310448800db24433119221240001331198104124000010031182213448800a32443311822124488007924438a01008bff25af67898a03018bfd648bfe8bff58898a04008bfc8bff88004d8bfd8bfd228bfe88ffe08bfc508bfd8bfe8bff08258bfe8bff080988ffcc5067898a04008bfc8bff88000a8bfd8bfe8bff88ffc2898a02018bfe16238bff098bff58898a0000310032091244898a02008bfe158bff1244898a00002888ff828003432d3288ff7a8003432d3388ff728003432d3488ff6a898a000088ffc5898a020088ffbe8bfe28222388ff948bff28232388ff8c898a00002249361a01178c00361a02178c018b008b0188ffd189
frame_bury 0
retsub

// prime_clear_program
primeclearprogram_15:
proto 0 1
pushbytes 0x08810043 // 0x08810043
retsub

// create
create_16:
proto 0 0
bytec_0 // "C-1"
callsub initglobal_0
pushbytes 0x432d32 // "C-2"
callsub initglobal_0
pushbytes 0x432d33 // "C-3"
callsub initglobal_0
pushbytes 0x432d34 // "C-4"
callsub initglobal_0
retsub

// update
update_17:
proto 0 0
callsub assertiscreator_11
retsub

// init
init_18:
proto 1 0
callsub assertiscreator_11
bytec_0 // "C-1"
intc_0 // 0
intc_1 // 8
callsub getglobaluint_2
callsub assertiszero_12
bytec_0 // "C-1"
intc_1 // 8
intc_1 // 8
callsub getglobaluint_2
callsub assertiszero_12
frame_dig -1
txnas Assets
intc_0 // 0
callsub optinintoasset_10
frame_dig -1
txnas Assets
bytec_0 // "C-1"
intc_1 // 8
intc_1 // 8
callsub setglobaluint_4
frame_dig -1
txnas Assets
asset_params_get AssetReserve
store 1
store 0
load 1
assert
load 0
bytec_0 // "C-1"
pushint 16 // 16
pushint 32 // 32
callsub setglobalbytes_3
retsub

// create_prime
createprime_19:
proto 4 0
intc_0 // 0
dup
frame_dig -4
pushint 1000 // 1000
<
assert
frame_dig -4
bytec_0 // "C-1"
intc_0 // 0
intc_1 // 8
callsub getglobaluint_2
==
assert
global CurrentApplicationAddress
global CurrentApplicationAddress
intc_2 // 1
intc_0 // 0
frame_dig -3
extract 2 0
frame_dig -2
extract 2 0
frame_dig -1
extract 2 0
intc_0 // 0
callsub createasset_8
itxn CreatedAssetID
frame_bury 0
callsub primeapprovalprogram_14
callsub primeclearprogram_15
intc_0 // 0
intc_3 // 4
intc_0 // 0
intc_0 // 0
intc_0 // 0
intc_0 // 0
callsub createapplication_6
itxn CreatedApplicationID
frame_bury 1
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
frame_dig 1
itxn_field ApplicationID
pushbytes 0x695ca160 // "init(uint64,uint64)void"
itxn_field ApplicationArgs
frame_dig -4
itob
itxn_field ApplicationArgs
frame_dig 0
itob
itxn_field ApplicationArgs
itxn_submit
bytec_0 // "C-1"
intc_0 // 0
intc_1 // 8
callsub getglobaluint_2
intc_2 // 1
+
bytec_0 // "C-1"
intc_0 // 0
intc_1 // 8
callsub setglobaluint_4
retsub

// update_prime_application
updateprimeapplication_20:
proto 1 0
callsub assertiscreator_11
frame_dig -1
txnas Applications
callsub primeapprovalprogram_14
callsub primeclearprogram_15
intc_0 // 0
callsub updateapplication_7
retsub

// update_prime_asset
updateprimeasset_21:
proto 2 0
callsub assertiscreator_11
frame_dig -2
txnas Assets
global CurrentApplicationAddress
frame_dig -1
txnas Accounts
txn Note
intc_0 // 0
callsub updateasset_9
retsub

// init_caster
initcaster_22:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub init_18
retsub

// create_prime_caster
createprimecaster_23:
proto 0 0
intc_0 // 0
pushbytes 0x // ""
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
callsub createprime_19
retsub

// update_prime_application_caster
updateprimeapplicationcaster_24:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub updateprimeapplication_20
retsub

// update_prime_asset_caster
updateprimeassetcaster_25:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
frame_dig 0
frame_dig 1
callsub updateprimeasset_21
retsub
#pragma version 8
intcblock 0 8 1 120
bytecblock 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x38adaa22 // "init(uint64,address)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xa0470fad // "create_prime(uint64,address,byte[],byte[],byte[])void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x6be89945 // "update_prime(application)void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateprimecaster_25
intc_2 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createprimecaster_24
intc_2 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initcaster_23
intc_2 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_19
intc_2 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
intc_2 // 1
return

// create_application
createapplication_0:
proto 8 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // NoOp
itxn_field OnCompletion
frame_dig -8
itxn_field ApprovalProgram
frame_dig -7
itxn_field ClearStateProgram
frame_dig -6
itxn_field GlobalNumUint
frame_dig -5
itxn_field GlobalNumByteSlice
frame_dig -4
itxn_field LocalNumUint
frame_dig -3
itxn_field LocalNumByteSlice
frame_dig -2
itxn_field ExtraProgramPages
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// update_application
updateapplication_1:
proto 4 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushint 4 // UpdateApplication
itxn_field OnCompletion
frame_dig -4
itxn_field ApplicationID
frame_dig -3
itxn_field ApprovalProgram
frame_dig -2
itxn_field ClearStateProgram
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// create_asset
createasset_2:
proto 8 0
frame_dig -8
global ZeroAddress
!=
assert
frame_dig -7
global ZeroAddress
!=
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -8
itxn_field ConfigAssetManager
frame_dig -7
itxn_field ConfigAssetReserve
frame_dig -6
itxn_field ConfigAssetTotal
frame_dig -5
itxn_field ConfigAssetDecimals
frame_dig -4
itxn_field ConfigAssetUnitName
frame_dig -3
itxn_field ConfigAssetName
frame_dig -2
itxn_field ConfigAssetURL
intc_0 // 0
itxn_field ConfigAssetDefaultFrozen
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// optin_into_asset
optinintoasset_3:
proto 2 0
frame_dig -2
intc_0 // 0
>
bz optinintoasset_3_l2
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
itxn_field Fee
itxn_submit
optinintoasset_3_l2:
retsub

// init_box
initbox_4:
proto 2 0
frame_dig -2
itob
frame_dig -1
bzero
box_put
retsub

// get_global_bytes
getglobalbytes_5:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_box_bytes
getboxbytes_6:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
box_extract
retsub

// get_global_uint
getglobaluint_7:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getglobalbytes_5
btoi
retsub

// get_box_uint
getboxuint_8:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getboxbytes_6
btoi
retsub

// set_global_bytes
setglobalbytes_9:
proto 4 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_16
frame_dig -3
frame_dig -3
intc_0 // 0
frame_dig -2
callsub getglobalbytes_5
frame_dig -4
concat
frame_dig -3
frame_dig -2
frame_dig -1
+
intc_3 // 120
frame_dig -2
frame_dig -1
+
-
callsub getglobalbytes_5
concat
app_global_put
retsub

// set_box_bytes
setboxbytes_10:
proto 4 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_16
frame_dig -3
frame_dig -2
frame_dig -4
box_replace
retsub

// set_global_uint
setglobaluint_11:
proto 4 0
frame_dig -4
frame_dig -1
callsub extractuint_13
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_9
retsub

// set_box_uint
setboxuint_12:
proto 4 0
frame_dig -4
frame_dig -1
callsub extractuint_13
frame_dig -3
frame_dig -2
frame_dig -1
callsub setboxbytes_10
retsub

// extract_uint
extractuint_13:
proto 2 1
frame_dig -2
itob
intc_1 // 8
frame_dig -1
-
frame_dig -1
extract3
retsub

// assert_is_creator
assertiscreator_14:
proto 0 0
txn Sender
global CreatorAddress
==
assert
retsub

// assert_is_zero
assertiszero_15:
proto 1 0
frame_dig -1
intc_0 // 0
==
assert
retsub

// assert_is_valid_length
assertisvalidlength_16:
proto 2 0
frame_dig -2
len
frame_dig -1
==
assert
retsub

// prime_approval_program
primeapprovalprogram_17:
proto 0 1
bytec_0 // ""
dup
pushbytes 0x08200400017802311b221240001d361a0080040e9569691240000100311922123118221310448800ac234331192212400013311981041240000100311822134488006e2343311822124488005823438a01008bff1624af67898a03018bfd648bfe8bff58898a04008bfc8bff88002b8bfd8bfd228bfe88ffe08bfc508bfd8bfe8bff08248bfe8bff080988ffcc5067898a0000310032091244898a02008bfe158bff1244898a00002388ffa32588ff9f898a000088ffd9898a020088ffd28bfe57020023222488ff9c8bff57020025222488ff91898a0000800049361a018c00361a028c018b008b0188ffcc89 // 0x08200400017802311b221240001d361a0080040e9569691240000100311922123118221310448800ac234331192212400013311981041240000100311822134488006e2343311822124488005823438a01008bff1624af67898a03018bfd648bfe8bff58898a04008bfc8bff88002b8bfd8bfd228bfe88ffe08bfc508bfd8bfe8bff08248bfe8bff080988ffcc5067898a0000310032091244898a02008bfe158bff1244898a00002388ffa32588ff9f898a000088ffd9898a020088ffd28bfe57020023222488ff9c8bff57020025222488ff91898a0000800049361a018c00361a028c018b008b0188ffcc89
frame_bury 0
retsub

// prime_clear_program
primeclearprogram_18:
proto 0 1
pushbytes 0x08810043 // 0x08810043
retsub

// update
update_19:
proto 0 0
callsub assertiscreator_14
retsub

// init
init_20:
proto 2 0
callsub assertiscreator_14
intc_2 // 1
itob
intc_0 // 0
intc_1 // 8
callsub getglobaluint_7
callsub assertiszero_15
intc_2 // 1
itob
intc_1 // 8
intc_1 // 8
callsub getglobaluint_7
callsub assertiszero_15
frame_dig -2
intc_2 // 1
itob
intc_1 // 8
intc_1 // 8
callsub setglobaluint_11
frame_dig -1
intc_2 // 1
itob
pushint 16 // 16
pushint 32 // 32
callsub setglobalbytes_9
frame_dig -2
intc_0 // 0
callsub optinintoasset_3
retsub

// create_prime
createprime_21:
proto 5 0
frame_dig -5
pushint 1000 // 1000
<
assert
frame_dig -5
intc_2 // 1
itob
intc_0 // 0
intc_1 // 8
callsub getglobaluint_7
==
assert
frame_dig -5
pushint 480 // 480
callsub initbox_4
frame_dig -5
frame_dig -5
itob
intc_0 // 0
intc_1 // 8
callsub setboxuint_12
global CurrentApplicationAddress
frame_dig -4
intc_2 // 1
intc_0 // 0
frame_dig -3
extract 2 0
frame_dig -2
extract 2 0
frame_dig -1
extract 2 0
intc_0 // 0
callsub createasset_2
itxn CreatedAssetID
frame_dig -5
itob
pushint 16 // 16
intc_1 // 8
callsub setboxuint_12
callsub primeapprovalprogram_17
callsub primeclearprogram_18
intc_0 // 0
pushint 2 // 2
intc_0 // 0
intc_0 // 0
intc_0 // 0
intc_0 // 0
callsub createapplication_0
itxn CreatedApplicationID
frame_dig -5
itob
intc_1 // 8
intc_1 // 8
callsub setboxuint_12
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
frame_dig -5
itob
intc_1 // 8
intc_1 // 8
callsub getboxuint_8
itxn_field ApplicationID
pushbytes 0x0e956969 // "sync(byte[],byte[])void"
itxn_field ApplicationArgs
frame_dig -5
intc_0 // 0
intc_3 // 120
callsub getboxbytes_6
itxn_field ApplicationArgs
frame_dig -5
intc_3 // 120
intc_3 // 120
callsub getboxbytes_6
itxn_field ApplicationArgs
itxn_submit
intc_2 // 1
itob
intc_0 // 0
intc_1 // 8
callsub getglobaluint_7
intc_2 // 1
+
intc_2 // 1
itob
intc_0 // 0
intc_1 // 8
callsub setglobaluint_11
retsub

// update_prime
updateprime_22:
proto 1 0
callsub assertiscreator_14
frame_dig -1
txnas Applications
callsub primeapprovalprogram_17
callsub primeclearprogram_18
intc_0 // 0
callsub updateapplication_1
retsub

// init_caster
initcaster_23:
proto 0 0
intc_0 // 0
bytec_0 // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub init_20
retsub

// create_prime_caster
createprimecaster_24:
proto 0 0
intc_0 // 0
bytec_0 // ""
dupn 3
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
txna ApplicationArgs 5
frame_bury 4
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub createprime_21
retsub

// update_prime_caster
updateprimecaster_25:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub updateprime_22
retsub
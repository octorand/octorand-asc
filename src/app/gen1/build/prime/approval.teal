#pragma version 8
intcblock 0 1 8 4
bytecblock 0x5072696d65
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x58b333da // "initialize(uint64,uint64,asset,asset,asset)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xfbce0795 // "populate(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[8])void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub populatecaster_14
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initializecaster_13
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
txn OnCompletion
intc_3 // UpdateApplication
==
bnz main_l9
err
main_l9:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_10
intc_1 // 1
return
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_9
intc_1 // 1
return

// init_global
initglobal_0:
proto 1 0
frame_dig -1
pushint 120 // 120
bzero
app_global_put
retsub

// get_global_bytes
getglobalbytes_1:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// set_global_bytes
setglobalbytes_2:
proto 4 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_8
frame_dig -3
frame_dig -3
intc_0 // 0
frame_dig -2
callsub getglobalbytes_1
frame_dig -4
concat
frame_dig -3
frame_dig -2
frame_dig -1
+
pushint 120 // 120
frame_dig -2
frame_dig -1
+
-
callsub getglobalbytes_1
concat
app_global_put
retsub

// set_global_uint
setglobaluint_3:
proto 4 0
frame_dig -4
frame_dig -1
callsub extractuint_4
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_2
retsub

// extract_uint
extractuint_4:
proto 2 1
frame_dig -2
itob
intc_2 // 8
frame_dig -1
-
frame_dig -1
extract3
retsub

// optin_into_asset
optinintoasset_5:
proto 2 0
frame_dig -2
intc_0 // 0
>
bz optinintoasset_5_l2
itxn_begin
intc_3 // axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
itxn_field Fee
itxn_submit
optinintoasset_5_l2:
retsub

// assert_is_creator
assertiscreator_6:
proto 0 0
txn Sender
global CreatorAddress
==
assert
retsub

// assert_is_equal
assertisequal_7:
proto 2 0
frame_dig -2
frame_dig -1
==
assert
retsub

// assert_is_valid_length
assertisvalidlength_8:
proto 2 0
frame_dig -2
len
frame_dig -1
==
assert
retsub

// create
create_9:
proto 0 0
bytec_0 // "Prime"
callsub initglobal_0
retsub

// update
update_10:
proto 0 0
callsub assertiscreator_6
retsub

// initialize
initialize_11:
proto 5 0
callsub assertiscreator_6
frame_dig -1
txnas Assets
pushint 660757756 // 660757756
callsub assertisequal_7
frame_dig -5
bytec_0 // "Prime"
intc_0 // 0
intc_3 // 4
callsub setglobaluint_3
frame_dig -4
bytec_0 // "Prime"
intc_3 // 4
intc_3 // 4
callsub setglobaluint_3
frame_dig -3
txnas Assets
bytec_0 // "Prime"
intc_2 // 8
intc_2 // 8
callsub setglobaluint_3
frame_dig -2
txnas Assets
bytec_0 // "Prime"
pushint 16 // 16
intc_2 // 8
callsub setglobaluint_3
intc_0 // 0
bytec_0 // "Prime"
pushint 48 // 48
intc_2 // 8
callsub setglobaluint_3
global ZeroAddress
bytec_0 // "Prime"
pushint 56 // 56
pushint 32 // 32
callsub setglobalbytes_2
frame_dig -1
txnas Assets
intc_0 // 0
callsub optinintoasset_5
frame_dig -3
txnas Assets
intc_0 // 0
callsub optinintoasset_5
frame_dig -2
txnas Assets
intc_0 // 0
callsub optinintoasset_5
retsub

// populate
populate_12:
proto 9 0
callsub assertiscreator_6
frame_dig -9
bytec_0 // "Prime"
pushint 24 // 24
pushint 2 // 2
callsub setglobaluint_3
frame_dig -8
bytec_0 // "Prime"
pushint 26 // 26
pushint 2 // 2
callsub setglobaluint_3
frame_dig -7
bytec_0 // "Prime"
pushint 28 // 28
intc_1 // 1
callsub setglobaluint_3
frame_dig -6
bytec_0 // "Prime"
pushint 29 // 29
intc_1 // 1
callsub setglobaluint_3
frame_dig -5
bytec_0 // "Prime"
pushint 30 // 30
intc_1 // 1
callsub setglobaluint_3
frame_dig -4
bytec_0 // "Prime"
pushint 31 // 31
intc_1 // 1
callsub setglobaluint_3
frame_dig -3
bytec_0 // "Prime"
pushint 32 // 32
intc_2 // 8
callsub setglobaluint_3
frame_dig -2
bytec_0 // "Prime"
pushint 40 // 40
intc_2 // 8
callsub setglobaluint_3
frame_dig -1
bytec_0 // "Prime"
pushint 88 // 88
intc_2 // 8
callsub setglobalbytes_2
retsub

// initialize_caster
initializecaster_13:
proto 0 0
intc_0 // 0
dupn 4
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 2
txna ApplicationArgs 4
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 5
intc_0 // 0
getbyte
frame_bury 4
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub initialize_11
retsub

// populate_caster
populatecaster_14:
proto 0 0
intc_0 // 0
dupn 7
pushbytes 0x // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
btoi
frame_bury 3
txna ApplicationArgs 5
btoi
frame_bury 4
txna ApplicationArgs 6
btoi
frame_bury 5
txna ApplicationArgs 7
btoi
frame_bury 6
txna ApplicationArgs 8
btoi
frame_bury 7
txna ApplicationArgs 9
frame_bury 8
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
callsub populate_12
retsub
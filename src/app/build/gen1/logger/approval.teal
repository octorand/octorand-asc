#pragma version 8
intcblock 0 1
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0x509c1528 // "buy(uint64,uint64,uint64,account,account)void"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub buycaster_2
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l7
err
main_l7:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
pushbytes 0xc9fd861dae22a7bad938ea83df1bee361d06ec08ab3ef9c74d87d5ad31e9f0af // ZH6YMHNOEKT3VWJY5KB56G7OGYOQN3AIVM7PTR2NQ7K22MPJ6CXRUAIIAM
==
assert
retsub

// buy
buy_1:
proto 5 0
pushbytes 0x627579 // "buy"
log
retsub

// buy_caster
buycaster_2:
proto 0 0
intc_0 // 0
dupn 4
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 5
intc_0 // 0
getbyte
frame_bury 4
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub buy_1
retsub
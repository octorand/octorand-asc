{
    "hints": {
        "upgrade(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "mint(uint64,application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw(uint64,application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "GenOneWallet",
        "methods": [
            {
                "name": "upgrade",
                "args": [
                    {
                        "type": "application",
                        "name": "application"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "mint",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "application",
                        "name": "application"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "withdraw",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "application",
                        "name": "application"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}